<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.CollectMapper">
  <resultMap id="BaseResultMap" type="po.Collect">
    <id column="collect_id" jdbcType="INTEGER" property="collectId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="collect_state" jdbcType="INTEGER" property="collectState" />
    <result column="collect_remarks" jdbcType="VARCHAR" property="collectRemarks" />
    <result column="collect_createtime" jdbcType="TIMESTAMP" property="collectCreatetime" />
    <result column="collect_changetime" jdbcType="TIMESTAMP" property="collectChangetime" />
  </resultMap>
  <resultMap id="CustomResultMap" type="po.CollectCustom">
    <id column="collect_id" jdbcType="INTEGER" property="collectId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="collect_state" jdbcType="INTEGER" property="collectState" />
    <result column="collect_remarks" jdbcType="VARCHAR" property="collectRemarks" />
    <result column="collect_createtime" jdbcType="TIMESTAMP" property="collectCreatetime" />
    <result column="collect_changetime" jdbcType="TIMESTAMP" property="collectChangetime" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="task_title" jdbcType="VARCHAR" property="taskTitle" />
    <result column="task_user_id" jdbcType="INTEGER" property="taskUserId" />
    <result column="task_user_name" jdbcType="VARCHAR" property="taskUserName" />
    <result column="task_schedule" jdbcType="INTEGER" property="taskSchedule" />
    <result column="task_state" jdbcType="INTEGER" property="taskState" />
    <result column="task_is_delete" jdbcType="INTEGER" property="taskIsDelete" />
    <result column="task_type" jdbcType="INTEGER" property="taskType" />
    <result column="task_content" jdbcType="VARCHAR" property="taskContent" />
    <result column="task_price" jdbcType="DOUBLE" property="taskPrice" />
    <result column="task_counts" jdbcType="INTEGER" property="taskCounts" />
    <result column="task_restcounts" jdbcType="INTEGER" property="taskRestcounts" />
    <result column="task_img" jdbcType="VARCHAR" property="taskImg" />
    <result column="task_createtime" jdbcType="TIMESTAMP" property="taskCreatetime" />
    <result column="task_endtime" jdbcType="TIMESTAMP" property="taskEndtime" />
  </resultMap>
  <sql id="Base_Column_List">
    collect_id, user_id, task_id, collect_state, collect_remarks, collect_createtime, 
    collect_changetime
  </sql>
  <sql id="Base_getAll_List">
    collect_id, db_collect.user_id, db_collect.task_id, collect_state, collect_remarks, collect_createtime, 
    collect_changetime, user_phone, user_name,
    task_title, db_task.user_id as task_user_id, task_user_name, task_schedule, task_state, 
    task_type, task_content, task_price, task_counts, task_restcounts, task_img, task_createtime, 
    task_endtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from db_collect
    where collect_id = #{collectId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from db_collect
    where collect_id = #{collectId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="po.Collect">
    insert into db_collect (collect_id, user_id, task_id, 
      collect_state, collect_remarks, collect_createtime, 
      collect_changetime)
    values (#{collectId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, 
      #{collectState,jdbcType=INTEGER}, #{collectRemarks,jdbcType=VARCHAR}, #{collectCreatetime,jdbcType=TIMESTAMP}, 
      #{collectChangetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="po.Collect">
    insert into db_collect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collectId != null">
        collect_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="collectState != null">
        collect_state,
      </if>
      <if test="collectRemarks != null">
        collect_remarks,
      </if>
      <if test="collectCreatetime != null">
        collect_createtime,
      </if>
      <if test="collectChangetime != null">
        collect_changetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collectId != null">
        #{collectId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="collectState != null">
        #{collectState,jdbcType=INTEGER},
      </if>
      <if test="collectRemarks != null">
        #{collectRemarks,jdbcType=VARCHAR},
      </if>
      <if test="collectCreatetime != null">
        #{collectCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="collectChangetime != null">
        #{collectChangetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="po.Collect">
    update db_collect
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="collectState != null">
        collect_state = #{collectState,jdbcType=INTEGER},
      </if>
      <if test="collectRemarks != null">
        collect_remarks = #{collectRemarks,jdbcType=VARCHAR},
      </if>
      <if test="collectCreatetime != null">
        collect_createtime = #{collectCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="collectChangetime != null">
        collect_changetime = #{collectChangetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Collect">
    update db_collect
    set user_id = #{userId,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=INTEGER},
      collect_state = #{collectState,jdbcType=INTEGER},
      collect_remarks = #{collectRemarks,jdbcType=VARCHAR},
      collect_createtime = #{collectCreatetime,jdbcType=TIMESTAMP},
      collect_changetime = #{collectChangetime,jdbcType=TIMESTAMP}
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <select id="selectCollectSelective" parameterType="po.Collect" resultMap="CustomResultMap">
      select * from db_collect
      <trim prefix="WHERE" prefixOverrides="AND |OR ">
      <if test="collectId != null">
      collect_id = #{collectId,jdbcType=INTEGER}
      </if>
      <if test="userId != null">
      AND user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="taskId != null">
      AND task_id = #{taskId,jdbcType=INTEGER}
      </if>
      </trim>
  </select>
  <select id="selectCollectListSelective" parameterType="po.Collect" resultMap="CustomResultMap">
      select 
      <include refid="Base_getAll_List" />
      from db_collect 
      <trim prefix="WHERE" prefixOverrides="AND |OR ">
      <if test="userId != null">
      user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="taskId != null">
      AND task_id = #{taskId,jdbcType=INTEGER}
      </if>
      <if test="collectState != null">
      AND user_id = #{collectState,jdbcType=INTEGER}
      </if>
      </trim>
      left join db_user on db_collect.user_id=db_user.user_id
      left join db_task on db_collect.task_id=db_task.task_id
      order by collect_createtime DESC
  </select>
  <select id="selectCollectListSelectiveByDate" resultMap="CustomResultMap">
      select
      <include refid="Base_getAll_List" />
      from db_collect
      <trim prefix="WHERE" prefixOverrides="AND |OR ">
      <if test="Collect.userId != null">
      user_id = #{Collect.userId,jdbcType=INTEGER}
      </if>
      <if test="Collect.taskId != null">
      AND task_id = #{Collect.taskId,jdbcType=INTEGER}
      </if>
      <if test="Collect.collectState != null">
      AND user_id = #{Collect.collectState,jdbcType=INTEGER}
      </if>
      <if test="startTime != null">
      <![CDATA[
      AND collect_createtime >= #{startTime}
      ]]>
      </if>
      <if test="endTime != null">
      <![CDATA[
      AND collect_createtime <= #{endTime}
      ]]>
      </if>
      </trim>
      left join db_user on db_collect.user_id=db_user.user_id
      left join db_task on db_collect.task_id=db_task.task_id
      order by collect_createtime DESC
  </select>
</mapper>