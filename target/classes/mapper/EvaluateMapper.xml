<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.EvaluateMapper">
  <resultMap id="BaseResultMap" type="po.Evaluate">
    <id column="evaluate_id" jdbcType="INTEGER" property="evaluateId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="evaluate_content" jdbcType="VARCHAR" property="evaluateContent" />
    <result column="evaluate_type" jdbcType="INTEGER" property="evaluateType" />
    <result column="evaluate_level" jdbcType="INTEGER" property="evaluateLevel" />
    <result column="evaluate_user_id" jdbcType="INTEGER" property="evaluateUserId" />
    <result column="evaluate_createtime" jdbcType="TIMESTAMP" property="evaluateCreatetime" />
    <result column="evaluate_state" jdbcType="INTEGER" property="evaluateState" />
  </resultMap>
  <sql id="Base_Column_List">
    evaluate_id, user_id, order_id, evaluate_content, evaluate_type, evaluate_level, evaluate_user_id, 
    evaluate_createtime, evaluate_state
  </sql>
  <resultMap id="CustomResultMap" type="po.EvaluateCustom">
    <id column="evaluate_id" jdbcType="INTEGER" property="evaluateId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="evaluate_content" jdbcType="VARCHAR" property="evaluateContent" />
    <result column="evaluate_type" jdbcType="INTEGER" property="evaluateType" />
    <result column="evaluate_level" jdbcType="INTEGER" property="evaluateLevel" />
    <result column="evaluate_user_id" jdbcType="INTEGER" property="evaluateUserId" />
    <result column="evaluate_createtime" jdbcType="TIMESTAMP" property="evaluateCreatetime" />
    <result column="evaluate_state" jdbcType="INTEGER" property="evaluateState" />
    
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="evaluate_user_phone" jdbcType="VARCHAR" property="evaluateUserPhone" />
    <result column="evaluate_user_name" jdbcType="VARCHAR" property="evaluateUserName" />
    
    <result column="order_launch_user_id" jdbcType="INTEGER" property="orderLaunchUserId" />
    <result column="order_receive_user_id" jdbcType="INTEGER" property="orderReceiveUserId" />
    <result column="order_launch_schedule" jdbcType="INTEGER" property="orderLaunchSchedule" />
    <result column="order_receive_schedule" jdbcType="INTEGER" property="orderReceiveSchedule" />
    <result column="order_task_id" jdbcType="INTEGER" property="orderTaskId" />
    <result column="order_describe" jdbcType="VARCHAR" property="orderDescribe" />
    <result column="order_launch_evaluate_state" jdbcType="INTEGER" property="orderLaunchEvaluateState" />
    <result column="order_receive_evaluate_state" jdbcType="INTEGER" property="orderReceiveEvaluateState" />
    <result column="order_price" jdbcType="DOUBLE" property="orderPrice" />
    <result column="order_state" jdbcType="INTEGER" property="orderState" />
    <result column="order_launch_state" jdbcType="INTEGER" property="orderLaunchState" />
    <result column="order_receive_state" jdbcType="INTEGER" property="orderReceiveState" />
    <result column="order_createtime" jdbcType="TIMESTAMP" property="orderCreatetime" />
    <result column="order_complete_time" jdbcType="TIMESTAMP" property="orderCompleteTime" />
  </resultMap>
  <sql id="Base_getAll_List">
    evaluate_id, user_id, task_id, evaluate_content, evaluate_type, evaluate_level, evaluate_user_id, 
    evaluate_createtime, evaluate_state,
    a.user_phone as user_phone, a.user_name as user_name,
    b.user_phone as evaluate_user_phone, b.user_name as evaluate_user_name,
    order_id, order_launch_user_id, order_receive_user_id, order_launch_schedule, order_receive_schedule, 
    order_task_id, order_describe, order_launch_evaluate_state, order_receive_evaluate_state, 
    order_price, order_state, order_launch_state, order_receive_state, order_createtime, 
    order_complete_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from db_evaluate
    where evaluate_id = #{evaluateId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from db_evaluate
    where evaluate_id = #{evaluateId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="po.Evaluate">
    insert into db_evaluate (evaluate_id, user_id, order_id, 
      evaluate_content, evaluate_type, evaluate_level, 
      evaluate_user_id, evaluate_createtime, evaluate_state
      )
    values (#{evaluateId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{evaluateContent,jdbcType=VARCHAR}, #{evaluateType,jdbcType=INTEGER}, #{evaluateLevel,jdbcType=INTEGER}, 
      #{evaluateUserId,jdbcType=INTEGER}, #{evaluateCreatetime,jdbcType=TIMESTAMP}, #{evaluateState,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="po.Evaluate">
    insert into db_evaluate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="evaluateId != null">
        evaluate_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="evaluateContent != null">
        evaluate_content,
      </if>
      <if test="evaluateType != null">
        evaluate_type,
      </if>
      <if test="evaluateLevel != null">
        evaluate_level,
      </if>
      <if test="evaluateUserId != null">
        evaluate_user_id,
      </if>
      <if test="evaluateCreatetime != null">
        evaluate_createtime,
      </if>
      <if test="evaluateState != null">
        evaluate_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="evaluateId != null">
        #{evaluateId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="evaluateContent != null">
        #{evaluateContent,jdbcType=VARCHAR},
      </if>
      <if test="evaluateType != null">
        #{evaluateType,jdbcType=INTEGER},
      </if>
      <if test="evaluateLevel != null">
        #{evaluateLevel,jdbcType=INTEGER},
      </if>
      <if test="evaluateUserId != null">
        #{evaluateUserId,jdbcType=INTEGER},
      </if>
      <if test="evaluateCreatetime != null">
        #{evaluateCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="evaluateState != null">
        #{evaluateState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="po.Evaluate">
    update db_evaluate
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="evaluateContent != null">
        evaluate_content = #{evaluateContent,jdbcType=VARCHAR},
      </if>
      <if test="evaluateType != null">
        evaluate_type = #{evaluateType,jdbcType=INTEGER},
      </if>
      <if test="evaluateLevel != null">
        evaluate_level = #{evaluateLevel,jdbcType=INTEGER},
      </if>
      <if test="evaluateUserId != null">
        evaluate_user_id = #{evaluateUserId,jdbcType=INTEGER},
      </if>
      <if test="evaluateCreatetime != null">
        evaluate_createtime = #{evaluateCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="evaluateState != null">
        evaluate_state = #{evaluateState,jdbcType=INTEGER},
      </if>
    </set>
    where evaluate_id = #{evaluateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Evaluate">
    update db_evaluate
    set user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      evaluate_content = #{evaluateContent,jdbcType=VARCHAR},
      evaluate_type = #{evaluateType,jdbcType=INTEGER},
      evaluate_level = #{evaluateLevel,jdbcType=INTEGER},
      evaluate_user_id = #{evaluateUserId,jdbcType=INTEGER},
      evaluate_createtime = #{evaluateCreatetime,jdbcType=TIMESTAMP},
      evaluate_state = #{evaluateState,jdbcType=INTEGER}
    where evaluate_id = #{evaluateId,jdbcType=INTEGER}
  </update>
  <select id="selectEvaluateSelective" parameterType="po.Evaluate" resultMap="CustomResultMap">
      select
      <include refid="Base_getAll_List" />
      from db_evaluate
      LEFT join db_user a on a.user_id=db_evaluate.user_id
      LEFT join db_user b on b.user_id=db_evaluate.evaluate_user_id
      LEFT join db_order t on t.order_id=db_evaluate.order_id
      <trim prefix="WHERE" prefixOverrides="AND |OR ">
      <if test="evaluateId != null">
      evaluate_id = #{evaluateId,jdbcType=INTEGER}
      </if>
      </trim>
  </select>
  <select id="selectEvaluateListSelective" parameterType="po.Evaluate" resultMap="CustomResultMap">
      select
      <include refid="Base_getAll_List" />
      from db_evaluate 
      LEFT join db_user a on a.user_id=db_evaluate.user_id
      LEFT join db_user b on b.user_id=db_evaluate.evaluate_user_id
      LEFT join db_order t on t.order_id=db_evaluate.order_id
      <trim prefix="WHERE" prefixOverrides="AND |OR ">
      <if test="userId != null">
      user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="orderId != null">
      AND order_id = #{taskId,jdbcType=INTEGER}
      </if>
      <if test="evaluateType != null">
      AND evaluate_type = #{evaluateType,jdbcType=INTEGER}
      </if>
      <if test="evaluateLevel != null">
      AND evaluate_level = #{evaluateLevel,jdbcType=INTEGER}
      </if>
      <if test="evaluateUserId != null">
      AND evaluate_user_id = #{evaluateUserId,jdbcType=INTEGER}
      </if>
      <if test="evaluateState != null">
      AND evaluate_state = #{evaluateState,jdbcType=INTEGER}
      </if>
      </trim>
      order by evaluate_createtime DESC
  </select>
  <select id="selectEvaluateListSelectiveByDate" resultMap="CustomResultMap">
      select
      <include refid="Base_getAll_List" />
      from db_evaluate
      LEFT join db_user a on a.user_id=db_evaluate.user_id
      LEFT join db_user b on b.user_id=db_evaluate.evaluate_user_id
      LEFT join db_order t on t.order_id=db_evaluate.order_id
      <trim prefix="WHERE" prefixOverrides="AND |OR ">
      <if test="Evaluate.userId != null">
      user_id = #{Evaluate.userId,jdbcType=INTEGER}
      </if>
      <if test="Evaluate.orderId != null">
      AND order_id = #{Evaluate.taskId,jdbcType=INTEGER}
      </if>
      <if test="Evaluate.evaluateType != null">
      AND evaluate_type = #{Evaluate.evaluateType,jdbcType=INTEGER}
      </if>
      <if test="Evaluate.evaluateLevel != null">
      AND evaluate_level = #{Evaluate.evaluateLevel,jdbcType=INTEGER}
      </if>
      <if test="Evaluate.evaluateUserId != null">
      AND evaluate_user_id = #{Evaluate.evaluateUserId,jdbcType=INTEGER}
      </if>
      <if test="Evaluate.evaluateState != null">
      AND evaluate_state = #{Evaluate.evaluateState,jdbcType=INTEGER}
      </if>
      <if test="startTime != null">
      <![CDATA[
      AND evaluate_createtime >= #{startTime}
      ]]>
      </if>
      <if test="endTime != null">
      <![CDATA[
      AND evaluate_createtime <= #{endTime}
      ]]>
      </if>
      </trim>
      order by evaluate_createtime DESC
  </select>
</mapper>